
# Styles
# Sadly axlsx_rails doesn't support a yield or partial for this
h1 = locals[:wb].styles.add_style(\
  bg_color: "004586", \
  sz: 12, \
  border: {style: :thin, color: "000000"}, \
  alignment: {horizontal: :center, vertical: :center}
  )
data = locals[:wb].styles.add_style(\
  sz: 12, \
  border: {style: :thick, color: "000000"}, \
  alignment: {horizontal: :center, vertical: :center}
  )

high_use_dxf = locals[:wb].styles.add_style(bg_color: "ff0000", type: :dxf)
mid_use_dxf = locals[:wb].styles.add_style(bg_color: "ffff00", type: :dxf)
low_use_dxf = locals[:wb].styles.add_style(bg_color: "008000", type: :dxf)
high_use = locals[:wb].styles.add_style(b: true, bg_color: "ff0000", border: {style: :thin, color: "000000"}, alignment: {horizontal: :center, vertical: :center})
mid_use = locals[:wb].styles.add_style(b: true, bg_color: "ffff00", border: {style: :thin, color: "000000"}, alignment: {horizontal: :center, vertical: :center})
low_use = locals[:wb].styles.add_style(b: true, bg_color: "008000", border: {style: :thin, color: "000000"}, alignment: {horizontal: :center, vertical: :center})

legend = locals[:wb].styles.add_style(b: true, alignment: {horizontal: :center, vertical: :center})
# End styles

locals[:wb].add_worksheet(name: "Redes") do |sheet|
  # Headers
  sheet.add_row ["Redes"], style: legend
  sheet.add_row ["Subred", "Capacidad Total", "Servicios Activos", "Servicios Disponibles", "% en Uso", "% Disponibilidad", "Servicios Comprometidos"], style: h1

  # Data
  locals[:subnets].each do |subnet|
    sheet.add_row [subnet.cidr, subnet.max_hosts, subnet.used_hosts, subnet.free_hosts, two_decimal_amount(subnet.used_percentage, '.'), two_decimal_amount(subnet.free_percentage, '.'), 0], style: data
  end

  # Formatting and styling
  sheet.add_conditional_formatting("E3:E#{3+locals[:subnets].count-1}", { :type => :cellIs, :operator => :lessThan, :formula => "61", :dxfId => low_use_dxf, :priority => 1 })
  sheet.add_conditional_formatting("E3:E#{3+locals[:subnets].count-1}", { :type => :cellIs, :operator => :lessThan, :formula => "81", :dxfId => mid_use_dxf, :priority => 1 })
  sheet.add_conditional_formatting("E3:E#{3+locals[:subnets].count-1}", { :type => :cellIs, :operator => :greaterThanOrEqual, :formula => "81", :dxfId => high_use_dxf, :priority => 1 })

  sheet.merge_cells("A1:G1")
end